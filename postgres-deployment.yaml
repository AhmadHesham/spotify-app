apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/postgres_go_net: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:12.7
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-claim0
            - mountPath: /docker-entrypoint-initdb.d/create_tables.sql
              name: postgres-claim1
            - mountPath: /docker-entrypoint-initdb.d/procedures.sql
              name: postgres-claim2
            - mountPath: /docker-entrypoint-initdb.d/sql_functions.sql
              name: postgres-claim3
      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
        - name: postgres-claim1
          persistentVolumeClaim:
            claimName: postgres-claim1
        - name: postgres-claim2
          persistentVolumeClaim:
            claimName: postgres-claim2
        - name: postgres-claim3
          persistentVolumeClaim:
            claimName: postgres-claim3
status: {}
